{"version":3,"sources":["../../src/pages/welcome/welcome.module.ts","../../src/pages/welcome/welcome.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAER;AAcxC,IAAa,iBAAiB;IAA9B;IAAiC,CAAC;IAAD,wBAAC;AAAD,CAAC;AAArB,iBAAiB;IAZ7B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,6DAAW;SACZ;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,6DAAW,CAAC;YACrC,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAE;YACP,6DAAW;SACZ;KACF,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBY;AACa;AACyB;AAE/B;AACb;AACpC;;;;;EAKE;AAMF,IAAa,WAAW;IAYtB,qBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,gBAAkC,EAAQ,SAA0B;QAH1D,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAQ,cAAS,GAAT,SAAS,CAAiB;QAd7E,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,YAAO,GAAwC;YAC7C,KAAK,EAAE,aAAa;YACpB,QAAQ,EAAE,MAAM;SACjB,CAAC;QAUA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,iCAAiC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED,+CAA+C;IAC/C,6BAAO,GAAP;QAAA,iBAmCC;QAlCD,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACxD,EAAE,EAAC,CAAC,KAAK,CAAC,CAAE,CAAC,EAAC;YAEZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBAC3C,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;YAC9B,CAAC,EAAE,UAAC,GAAG;gBACL,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wDAAQ,CAAC,CAAC;gBAC5B,mBAAmB;gBACnB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAChC,OAAO,EAAE,KAAI,CAAC,gBAAgB;oBAC9B,QAAQ,EAAE,IAAI;oBACd,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;gBACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,EAAC;YAEJ,IAAI,SAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAClC,KAAK,EAAE,yBAAyB;gBAChC,OAAO,EAAE,EAAE;gBACX,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE;wBAET,CAAC;qBACF;iBAEF;aACF,CAAC,CAAC;YACH,SAAO,CAAC,OAAO,EAAE,CAAC;QAEpB,CAAC;IAED,CAAC;IAID,2BAAK,GAAL;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IACH,kBAAC;AAAD,CAAC;AArEY,WAAW;IAJvB,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;OACG;KAC5B,CAAC;2EAayC;QAC1B,sEAAI;QACC,6EAAe;QACR,QAAkD;AAsD9E;SArEY,WAAW,e","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { WelcomePage } from './welcome';\n\n@NgModule({\n  declarations: [\n    WelcomePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(WelcomePage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    WelcomePage\n  ]\n})\nexport class WelcomePageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/welcome/welcome.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController,ToastController,AlertController } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\n/**\n * The Welcome Page is a splash page that quickly describes the app,\n * and then directs the user to create an account or log in.\n * If you'd like to immediately put the user onto a login/signup page,\n * we recommend not using the Welcome page.\n*/\n@IonicPage()\n@Component({\n  selector: 'page-welcome',\n  templateUrl: 'welcome.html'\n})\nexport class WelcomePage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string } = {\n    email: 'test@gfi.fr',\n    password: 'test'\n  };\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService,public alertCtrl: AlertController) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      // this.loginErrorString = value;\n    })\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n  var s = this.account.email.toString().search(\"@gfi.fr\");\n  if(s !== -1 ){\n  \n    this.user.login(this.account).subscribe((resp) => {\n      this.navCtrl.push(MainPage);\n    }, (err) => {\n      this.navCtrl.push(MainPage);\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }else{\n\n    let confirm = this.alertCtrl.create({\n      title: 'Identifiants invalides.',\n      message: '',\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n\n          }\n        }\n\n      ]\n    });\n    confirm.present();\n\n  }\n\n  }\n\n\n\n  login() {\n    this.navCtrl.push('LoginPage');\n  }\n\n  signup() {\n    this.navCtrl.push('SignupPage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/welcome/welcome.ts"],"sourceRoot":""}